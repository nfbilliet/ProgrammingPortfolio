=====Taak Module Extra Mogelijkheden=====

===Vraag 1===

-Opgave-

Geef een lijst van de films die in de titel noch het woord "kill" noch het woord "blood" hebben. 
We willen enkel de films van de genres griezel en thriller.

-Antwoord-

select 
	titel 
from 
	video.films 
where 
	titel not like '%kill%' 
    and 
    titel not like '%blood%' 
    and 
    films.genreId in (select genres.genreId from video.genres where genres.genre in ('griezel', 'thriller'))

===Vraag 2

-Opgave-

Maak een lijst van wie welke films huurt. Sorteer oplopend op naam en titel.

-Antwoord-

select
	films.titel,
    klanten.naam
from
	video.films inner join video.verhuringen
    on verhuringen.filmId = films.filmId
    inner join video.klanten
    on verhuringen.klantId = klanten.klantId
order by
	naam, titel desc

===Vraag 3===

-Opgave-

Wat is de totale voorraad per genre?

-Antwoord-

select 
	genres.genre,
	sum(films.voorraad) as 'totale voorraad'
from 
	video.films inner join video.genres
    on films.genreId = genres.genreId
group by
	genre 
order by
	genre

===Vraag 4===

-Opgave-

Geef alle gegevens van de duurste film.

-Antwoord-

Niet echt duidelijk wat er specifiek wordt bedoeld met alle gegevens.
Ik heb dit opgelost door 2 verschillende queries te schrijven die op hun eigen manier 
alle informatie geven 
    1) Query 1 geeft een overzicht van de stock van de film 
    2) Query 2 geeft een overzicht van de films en de klanten die ze hebben gehuurd
    3) Query 3 combineert beiden via een union

*Query 1*

select
	duursteFilms.filmId,
	duursteFilms.titel,
    genres.genre,
    maatschappijen.maatschappij,
    duursteFilms.voorraad,
    duursteFilms.verhuurd,
    duursteFilms.prijs,
    duursteFilms.totaalVerhuurd
from 
	(select * from video.films where prijs = (select max(prijs) from video.films)) as duursteFilms
    inner join video.genres
    on duursteFilms.genreId = genres.genreId
    inner join video.maatschappijen
    on duursteFilms.maatschappijId = maatschappijen.maatschappijId

*Query 2*

select
	duursteFilms.filmId,
	duursteFilms.titel,
    maatschappijen.maatschappij,
	klanten.klantId as 'klantennummer',
    klanten.naam as naam,
    klanten.voornaam as voornaam,
    verhuringen.verhuurDatum as verhuurdatum,
from 
	(select * from video.films where prijs = (select max(prijs) from video.films)) as duursteFilms
    inner join video.verhuringen
    on verhuringen.filmId = duursteFilms.filmId
    inner join video.klanten
    on verhuringen.klantId = klanten.klantId
    inner join video.maatschappijen
    on duursteFilms.maatschappijId = maatschappijen.maatschappijId

*Query 3*

select
	duursteFilms.filmId,
	duursteFilms.titel,
    genres.genre,
    maatschappijen.maatschappij,
    duursteFilms.voorraad,
    duursteFilms.verhuurd,
    duursteFilms.prijs,
    duursteFilms.totaalVerhuurd
from 
	(select * from video.films where prijs = (select max(prijs) from video.films)) as duursteFilms
    inner join video.genres
    on duursteFilms.genreId = genres.genreId
    inner join video.maatschappijen
    on duursteFilms.maatschappijId = maatschappijen.maatschappijId
union
select
	duursteFilms.filmId,
	duursteFilms.titel,
    maatschappijen.maatschappij,
	klanten.klantId as 'klantennummer',
    klanten.naam as naam,
    klanten.voornaam as voornaam,
    verhuringen.verhuurDatum as verhuurdatum,
    null
from 
	(select * from video.films where prijs = (select max(prijs) from video.films)) as duursteFilms
    inner join video.verhuringen
    on verhuringen.filmId = duursteFilms.filmId
    inner join video.klanten
    on verhuringen.klantId = klanten.klantId
    inner join video.maatschappijen
    on duursteFilms.maatschappijId = maatschappijen.maatschappijId